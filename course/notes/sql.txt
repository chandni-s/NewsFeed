https://www.sqlite.org/lang.html - SQL as understood by SQLite

********************************************************************************

Basics (for sqlite shell)
.tables - views tables in the database
.schema - views schema of the database
.headers on - shows column headers

********************************************************************************

Enabling the foreign key support:

PRAGMA foreign_keys = ON;

********************************************************************************

Creating the sources table:

CREATE TABLE sources(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    url TEXT UNIQUE
);

********************************************************************************

Removing the sources table:

DROP TABLE sources;

********************************************************************************

Adding a source:

INSERT INTO Sources(name, url) VALUES ("CNN", "http://www.cnn.com");

********************************************************************************

Viewing all of the existing sources:

SELECT * FROM Sources;

********************************************************************************

Removing a source by name (also removes any articles that use the source):

DELETE FROM sources WHERE name="CNN";

********************************************************************************

Removing a source by id:

DELETE FROM sources WHERE id=1

********************************************************************************

Removing all sources from the sources table:

DELETE FROM sources;

********************************************************************************

Viewing a source by name:

SELECT * FROM Sources WHERE name="CNN";

********************************************************************************

Getting the id of a source, by name:

SELECT id FROM Sources WHERE name="CNN" LIMIT 1;

********************************************************************************

Creating the keywords table:

CREATE TABLE keywords(
    id INTEGER PRIMARY KEY,
    s_id INTEGER NOT NULL,
    name TEXT UNIQUE NOT NULL,
    FOREIGN KEY(s_id) REFERENCES sources(id) ON DELETE CASCADE
);

********************************************************************************

Adding an keyword, with source given by name:

INSERT INTO keywords(s_id, name) VALUES (
    (SELECT id FROM Sources WHERE name="CNN" LIMIT 1), 
    "Cable News Network"
);

********************************************************************************

Creating the articles table:

CREATE TABLE articles(
    id INTEGER PRIMARY KEY,
    s_id INTEGER NOT NULL,
    title TEXT NOT NULL,
    author TEXT NOT NULL,
    url TEXT,
    date DATE,
    FOREIGN KEY(s_id) REFERENCES sources(id) ON DELETE CASCADE,
    UNIQUE (s_id, title, date)
);

********************************************************************************

Adding an article (source id must exist)

INSERT INTO articles(s_id, title, author, url, date) VALUES 
    (2, "Test 2", "Jim", "http://cnn.com", 2014-10-04);

********************************************************************************

Adding an article, with the source given by name:

INSERT INTO articles(s_id, title, author, url, date) VALUES (
    (SELECT id FROM Sources WHERE name="CNN" LIMIT 1), 
    "Test", 
    "Jim", 
    "http://cnn.com", 
    2014-10-02
);

********************************************************************************

Getting a list of articles from a list of sources:

SELECT * FROM articles WHERE s_id IN
    (SELECT id FROM sources WHERE name IN ("CNN", "AP"));

********************************************************************************

Adding the links & references table:

CREATE TABLE ref(
    id INTEGER PRIMARY KEY,
    s_id INTEGER NOT NULL,
    a1_id INTEGER NOT NULL,
    a2_id INTEGER,
    FOREIGN KEY(s_id) REFERENCES sources(id) ON DELETE CASCADE,
    FOREIGN KEY(a1_id) REFERENCES articles(id) ON DELETE CASCADE,
    FOREIGN KEY(a2_id) REFERENCES articles(id) ON DELETE CASCADE,
    UNIQUE(a1_id, a2_id),
    CHECK (a1_id != a2_id)
);

********************************************************************************

Creating the duplicate detection trigger:

CREATE TRIGGER ref_dup_check BEFORE INSERT ON ref WHEN NEW.a2_id IS NULL
BEGIN
    SELECT RAISE(ABORT, "Duplicated article/source reference.") WHERE
    EXISTS (SELECT * FROM ref WHERE s_id=NEW.s_id AND a1_id=NEW.a1_id LIMIT 1);
END;

********************************************************************************

Creating the auto delete trigger for deleting references when a link is added:

CREATE TRIGGER ref_clean AFTER INSERT on ref WHEN NEW.a2_id IS NOT NULL
BEGIN
    DELETE FROM ref WHERE s_id=NEW.s_id AND a1_id=NEW.a1_id AND a2_id IS NULL;
END;

********************************************************************************

Adding a reference between an article and a source, by id:

INSERT INTO ref(s_id, a1_id) VALUES (2, 1);

********************************************************************************

Adding a link between an article and another article, by id:

INSERT INTO ref(s_id, a1_id, a2_id) VALUES (
    (SELECT s_id FROM articles WHERE id=2 LIMIT 1),
    1,
    2
);

********************************************************************************

Create the categories table:

CREATE TABLE categories(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL UNIQUE
);

********************************************************************************

Add a category:

INSERT INTO categories(name) VALUES ("World News");
